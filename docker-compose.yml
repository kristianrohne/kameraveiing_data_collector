services:
  # Flask Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: kameraveiing-backend
    ports:
      - "8000:8000"
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - SECRET_KEY=${SECRET_KEY:-default-dev-secret-key}
      - JWT_SECRET=${JWT_SECRET:-default-dev-jwt-secret}
      - DATABASE_URL=${DATABASE_URL:-sqlite:///./data/kameraveiing.db}
      - UPLOAD_ROOT=${UPLOAD_ROOT:-./data/uploads}
    volumes:
      # Persistent data storage
      - backend_data:/app/data
      - backend_uploads:/app/data/uploads
      - backend_s3:/app/dummy_s3
      - backend_sessions:/app/flask_session
      # Development: mount source code for hot reload
      - ./backend:/app
    networks:
      - kameraveiing-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Angular Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: kameraveiing-frontend
    ports:
      - "4200:80"
    depends_on:
      - backend
    networks:
      - kameraveiing-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  backend_data:
    driver: local
  backend_uploads:
    driver: local
  backend_s3:
    driver: local
  backend_sessions:
    driver: local

networks:
  kameraveiing-network:
    driver: bridge